#!/usr/bin/env python

import os
import argparse
import datetime

parser = argparse.ArgumentParser(description='option')
parser.add_argument('-n', dest='Name', default="")
parser.add_argument('-l', dest='RunList')
parser.add_argument('--Full', action='store_true')
args = parser.parse_args()

pwd = os.getcwd()
CMSSW_BASE = os.environ['CMSSW_BASE']
SCRAM_ARCH = os.environ['SCRAM_ARCH']

cards = open(args.RunList).readlines()
NCARD = len(cards)

JobStartTime = datetime.datetime.now()
timestamp =  JobStartTime.strftime('%Y_%m_%d_%H%M%S')

JobName = timestamp
if args.Name!="":
  JobName += "__"+args.Name

print '@@@@ Job directory :'
print 'cd '+JobName
print 'condor_submit submit.sh'
print 'cd ..'

FullPathJobDir = pwd+'/'+JobName+'/'
os.system('mkdir -p '+JobName+'/output/')

#### first write the executable

executable_filename = 'Combine_'+JobName+'.sh'
executable = open(pwd+'/'+JobName+'/'+executable_filename,'w')
print>>executable,'''#!/bin/bash
SECTION=`printf $1`
WORKDIR=`pwd`

#### Don't make root history
export ROOT_HIST=0

#### use cvmfs for root ####
export CMS_PATH=/cvmfs/cms.cern.ch
source $CMS_PATH/cmsset_default.sh
export SCRAM_ARCH={0}
cd {1}/src/
echo "@@@@ SCRAM_ARCH = "$SCRAM_ARCH
echo "@@@@ cmsswrel = "$cmsswrel
echo "@@@@ scram..."
eval `scramv1 runtime -sh`
cd -
source {2}/run_${{SECTION}}.sh
'''.format(SCRAM_ARCH,CMSSW_BASE,pwd+'/'+JobName)
executable.close()

#### Write jds

jdsfile = open(pwd+'/'+JobName+'/submit.sh','w')
print>>jdsfile,'''executable = {1}
universe   = vanilla
arguments  = $(Process)
log = condor.log
getenv     = True
should_transfer_files = YES
when_to_transfer_output = ON_EXIT
output = job_$(Process).log
error = job_$(Process).err
#transfer_output_files = higgsCombineTest.AsymptoticLimits.mH120.root
#transfer_output_remaps = "higgsCombineTest.AsymptoticLimits.mH120.root = output/hists_$(Process).root"
queue {0}
'''.format(str(NCARD), executable_filename)
jdsfile.close()

#### write job sh file

for i in range(0,NCARD):

  card = cards[i].strip('\n')

  runfile = open(pwd+'/'+JobName+'/run_'+str(i)+'.sh','w')

  shortcard = card.split('/')[-1]

  runfile.write('echo "Input datacard '+shortcard+'"\n')

  #### Full CLs
  if args.Full:
    print>>runfile,'''for quant in 0.025 0.160 0.500 0.840 0.975
do
  echo "#### quant = "$quant
  #combine -M HybridNew --frequentist --testStat LHC {0} -n {1}_exp$quant --expectedFromGrid $quant -T 100
  combine -M HybridNew --testStat LHC {0} -n {1}_exp$quant --expectedFromGrid $quant -T 1000
done
'''.format(card,shortcard)

  #### AymptoticLimits
  else:
    runfile.write('combine -M AsymptoticLimits '+card+' --run blind \n')
    #runfile.write('combine -M AsymptoticLimits '+card+'\n')


  runfile.close()















